<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_44813_persactivt_activity</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_44813_persactivt_activity">related_taskISEMPTY^EQ<item endquery="false" field="related_task" goto="false" newquery="false" operator="ISEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Validate Personal Activity</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
    var state = parseInt(current.state);
    if (state == 1 || state == 2)
        return;
    var gr = new GlideRecord('x_44813_persactivt_activity');
    gr.addQuery('parent', current.sys_id);
    gr.query();
    var notification;
    if (gr.next()) {
        if (state > 2) {
            do {
                if (parseInt(gr.state) < 3) {
                    notification = new UINotification('demo_notification');
                    notification.setAttribute('state', 'Cannot be in closed state: One or more dependent activities are not closed.');
                    notification.send();
                    current.setAbortAction(true);
                    return;
                }
            } while (gr.next());
        } else {
            do {
                state = parseInt(gr.state);
                if (state == 1 || state == 2) {
                    notification = new UINotification('demo_notification');
                    notification.setAttribute('state', 'Cannot be in pending state: One or more dependent activities are neither pending, nor closed.');
                    notification.send();
                    current.setAbortAction(true);
                    return;
                }
            } while (gr.next());
        }
    }
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-10-12 19:19:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>91907e7097621110d87839000153afc7</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Validate Personal Activity</sys_name>
        <sys_overrides/>
        <sys_package display_value="Personal Activity Tool" source="x_44813_persactivt">c2853b0497221110d87839000153af42</sys_package>
        <sys_policy/>
        <sys_scope display_value="Personal Activity Tool">c2853b0497221110d87839000153af42</sys_scope>
        <sys_update_name>sys_script_91907e7097621110d87839000153afc7</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2022-10-12 19:39:59</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=91907e7097621110d87839000153afc7"/>
</record_update>
